{"createdAt":"2025-09-25T11:10:39.431Z","updatedAt":"2025-09-25T13:15:58.000Z","id":"4YUVmlwx7y61OMrC","name":"CHILD","active":false,"isArchived":false,"nodes":[{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-240,0],"id":"56974e5b-c0cb-4d99-9d1d-947c8c72a85a","name":"When Executed by Another Workflow"},{"parameters":{"jsCode":"// Get input data from the workflow trigger\nconst inputData = $input.all()[0].json;\n\n// Helper function to capitalize words\nfunction capitalizeWords(str) {\n  if (!str) return '';\n  return str.toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ')\n    .trim();\n}\n\n// Standardize the address safely\nconst raw = inputData.raw_address || {};\n\nconst cleanAddress = {\n  street: capitalizeWords(raw.street),\n  city: capitalizeWords(raw.city),\n  state: raw.state ? raw.state.toUpperCase() : '',\n  postal_code: raw.postal_code || ''\n};\n\n// Return the standardized output\nreturn [{\n  json: {\n    standardized_address: cleanAddress,\n    customer_name: inputData.customer_name || '',\n    customer_email: inputData.customer_email || ''\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[256,0],"id":"8b2a684f-a8ba-4d6d-8fe6-d5c3edf861ca","name":"Code in JavaScript"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Code in JavaScript","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"5f6663c8-9414-44b3-b19f-8c6c78a3be08","triggerCount":0,"shared":[{"createdAt":"2025-09-25T11:10:39.438Z","updatedAt":"2025-09-25T11:10:39.438Z","role":"workflow:owner","workflowId":"4YUVmlwx7y61OMrC","projectId":"Y7ENNAbt7AnhyYc8"}],"tags":[]}